-- Understanding the tables:
SELECT * FROM trips;
 
SELECT * FROM riders;
 
SELECT * FROM cars;

-- Performing a cross between riders and cars:
SELECT riders.first,
   riders.last,
   cars.model
FROM riders, cars;

-- Performing a Left Join between trips and riders:
SELECT *
FROM trips
LEFT JOIN riders 
  ON trips.rider_id = riders.id;

-- Performing an inner join between trips and cars:
SELECT *
FROM trips
JOIN cars
  ON trips.car_id = cars.id;

-- Stacking the riders table on top of the riders2 table:
SELECT *
FROM riders
UNION
SELECT *
FROM riders2;

-- Finding average cost for a trip:
SELECT AVG(cost)
FROM trips;

-- Finding all riders who have used Lyft less than 500 times:
SELECT *
FROM riders
WHERE total_trips < 500;

-- Finding total number of active cars:
SELECT COUNT(*)
FROM cars
WHERE status = 'active';

-- Finding the two cars with the highest trips completed:
SELECT *
FROM cars
ORDER BY trips_completed DESC
LIMIT 2;